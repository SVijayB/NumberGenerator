{"version":3,"sources":["logo.svg","index.js"],"names":["NumGenerator","props","minChange","event","setState","min","target","value","maxChange","max","generateNumber","Math","floor","random","getInputs","state","minTemp","maxTemp","number","this","id","type","onChange","onClick","Component","ReactDOM","render","document","getElementById","App","className","src","logo","alt","href","rel"],"mappings":"gLAAe,MAA0B,iC,yCCyBnCA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,UAAY,SAACC,GACX,EAAKC,SAAS,CAAEC,IAAKF,EAAMG,OAAOC,SAdjB,EAiBnBC,UAAY,SAACL,GACX,EAAKC,SAAS,CAAEK,IAAKN,EAAMG,OAAOC,SAlBjB,EAqBnBG,eAAiB,SAACL,EAAKI,GACrB,OAAOE,KAAKC,MAAMD,KAAKE,UAAUJ,EAAIJ,EAAI,GAAGA,IAtB3B,EAyBnBS,UAAY,WACV,GAAG,EAAKC,MAAMV,IAAM,EAAKU,MAAMN,IAAK,CAClC,IAAMO,EAAU,EAAKD,MAAMV,IACrBY,EAAU,EAAKF,MAAMN,IAC3B,EAAKL,SACL,CACEC,IAAKY,EACLR,IAAKO,IACJ,kBACD,EAAKZ,SAAS,CACZc,OAAQ,EAAKR,eAAe,EAAKK,MAAMV,IAAK,EAAKU,MAAMN,eAI3D,EAAKL,SAAS,CACZc,OAAQ,EAAKR,eAAe,EAAKK,MAAMV,IAAK,EAAKU,MAAMN,QAtC3D,EAAKM,MAAQ,CACXV,IAAK,EACLI,IAAK,EACLS,OAAQ,GALO,E,qDASnB,WACCC,KAAKf,SAAS,CAAEc,OAAQC,KAAKT,eAAeS,KAAKJ,MAAMV,IAAKc,KAAKJ,MAAMN,S,oBAmCxE,WACE,OACE,sBAAKW,GAAG,YAAR,UACE,qBAAKA,GAAG,QAAR,qCACA,mBAAGA,GAAG,OAAN,SAAeD,KAAKJ,MAAMG,SAC1B,sBAAKE,GAAG,iBAAR,UACE,sBAAKA,GAAG,UAAR,UACE,oCACA,uCAEF,sBAAKA,GAAG,SAAR,UACE,uBAAOA,GAAG,MAAMf,IAAI,cAAcI,IAAI,aAAaY,KAAK,SAASd,MAAQY,KAAKJ,MAAMV,IAAMiB,SAAUH,KAAKjB,YACzG,uBAAOkB,GAAG,MAAMf,IAAI,cAAcI,IAAI,aAAaY,KAAK,SAASd,MAAQY,KAAKJ,MAAMN,IAAMa,SAAUH,KAAKX,YACzG,uBAAOY,GAAG,WAAWC,KAAK,SAASd,MAAM,kBAAkBgB,QAAUJ,KAAKL,yB,GA3D3DU,aAmE3BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAGXC,UA5Ff,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACL5B,OAAO,SACP6B,IAAI,sBAJN,gC","file":"static/js/main.6252847a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './index.scss';\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\nclass NumGenerator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      min: 1,\n      max: 6,\n      number: 1\n    }\n  }\n\n  componentDidMount() {\n   this.setState({ number: this.generateNumber(this.state.min, this.state.max)})\n  }\n  \n  minChange = (event) => {\n    this.setState({ min: event.target.value})\n  }\n  \n  maxChange = (event) => {\n    this.setState({ max: event.target.value})\n  }\n  \n  generateNumber = (min, max) => {\n    return Math.floor(Math.random()*(max-min+1)+min)\n  }\n  \n  getInputs = () => {\n    if(this.state.min > this.state.max ){\n      const minTemp = this.state.min\n      const maxTemp = this.state.max\n      this.setState(\n      { \n        min: maxTemp,\n        max: minTemp\n      }, () =>\n        this.setState({\n          number: this.generateNumber(this.state.min, this.state.max)  \n        })\n      );\n    } else {\n      this.setState({\n        number: this.generateNumber(this.state.min, this.state.max)  \n      })\n    }\n  }\n  \n  render() {\n    return (\n      <div id=\"generator\">\n        <div id=\"title\">Random Number Generator</div>\n        <p id=\"rNum\">{ this.state.number }</p>\n        <div id=\"inputContainer\">\n          <div id=\"headers\"> \n            <p>Min</p>\n            <p>Max</p>\n          </div>\n          <div id=\"inputs\">\n            <input id=\"min\" min=\"-9999999999\" max=\"9999999999\" type=\"number\" value={ this.state.min } onChange={this.minChange} />\n            <input id=\"max\" min=\"-9999999999\" max=\"9999999999\" type=\"number\" value={ this.state.max } onChange={this.maxChange} />\n            <input id=\"generate\" type=\"submit\" value=\"Generate Number\" onClick={ this.getInputs }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <NumGenerator />,\n  document.getElementById('root')\n);\n\nexport default App;\n"],"sourceRoot":""}